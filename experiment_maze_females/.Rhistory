exitNumber <- function(y) {
exit <- 0
if (y > 0.05 & y <0.09) { exit <- 1 }
else if (y > 0.15 & y < 0.2) { exit <- 2}
else if (y > 0.25 & y < 0.3)  {exit <- 3}
else if (y > 0.35 & y < 0.4)  {exit <- 4}
else if (y >0.45 & y < 0.52) {exit <- 5}
else if (y >0.55 & y < 0.6) {exit <- 6}
exit
}
firstpart <- dt_15[, head(.SD, index_end_maze(x,t)), by=key(dt)]
library(rethomics)
setwd("/data/Diana/rsync_data_node/analyse/experiment_week_19_04-22_04")
q <- fread("./query3.csv")
q <- buildEthoscopeQuery("/data/Diana/rsync_data_node/ethoscope_videos", q)
dt <- loadEthoscopeData(q)
# time each fly spent in the maze
dt[, .(t_maze = tail(.SD$t, 1)/60), by=key(dt)]
# remove the initial points of tracking that are eronous tracking.
dt_clean <- dt[!(t  <  30 & x > 0.68)]
dt_clean <- dt_clean[!(x < 0.2 & y > 0.4)]
dt_clean <- dt_clean[!(x < 0.2 & y < 0.3)]
# 15 minutes of data for each fly
dt_15 <- dt_clean[t < 900, .SD ,by=key(dt)]
dt_15[, .(t_maze = tail(.SD$t, 1)/60), by=key(dt_15)]
#ggplot(dt_15, aes(x, y, col=t)) + geom_point() + facet_grid(round ~ uid)
dt_15 <- dt_15[, .(x=x, y=y, phi=phi, t=t, w=w, h=h, vx = c(0, diff(.SD$x)/diff(.SD$t)), uid= paste(dam, experiment, fly_id, sd, sep='_')), by=key(dt_15)]
firstpart <- dt_15[, head(.SD, index_end_maze(x,t)), by=key(dt)]
index_end_maze <- function(x, t) {
index <- min(which(x > 0.68))
}
firstpart <- dt_15[, head(.SD, index_end_maze(x,t)), by=key(dt)]
ggplot(firstpart, aes(x=phi, col=sd)) + geom_histogram(binwidth=10) + coord_polar(start = 0) #+ facet_grid(round ~ uid)
lastPoints <- firstpart[x>0.67 & x<0.68 & (day %in% c('11','12','13'))]
lastPoints <- firstpart[x>0.67 & x<0.68 ]
lastPositions <- lastPoints[, list(lastx=mean(.SD$x), lasty=mean(.SD$y)), by=key(lastPoints)]
exitNumber <- function(y) {
exit <- 0
if (y > 0.05 & y <0.09) { exit <- 1 }
else if (y > 0.15 & y < 0.2) { exit <- 2}
else if (y > 0.25 & y < 0.3)  {exit <- 3}
else if (y > 0.35 & y < 0.4)  {exit <- 4}
else if (y >0.45 & y < 0.52) {exit <- 5}
else if (y >0.55 & y < 0.6) {exit <- 6}
exit
}
lastPositions[, exit:=sapply(lasty, exitNumber)]
hist(lastPositions$exit, col='red', breaks = 20, main="Exit distribution of ALL flies", xlab='exit #')
hist(tail(lastPositions$exit,15), breaks=20, col="red")
par(new=T)
d <- density(lastPositions$exit)
plot(d)
lastPositions
lastPoints
unique(lastPoints$uid)
min(lastPoints$uid)
min(lastPoints$y)
max(lastPoints$y)
key(lastPoints)
plot(lastPoints$x, lastPoints$y)
exitNumber <- function(y) {
exit <- 0
if (y < 0.15) { exit <- 1 }
else if (y > 0.15 & y < 0.29) { exit <- 2}
else if (y > 0.29 & y < 0.35)  {exit <- 3}
else if (y > 0.35 & y < 0.4)  {exit <- 4}
else if (y >0.40 & y < 0.57) {exit <- 5}
else if (y > 0.57) {exit <- 6}
exit
}
lastPositions[, exit:=sapply(lasty, exitNumber)]
hist(lastPositions$exit, col='red', breaks = 20, main="Exit distribution of ALL flies", xlab='exit #')
plot(lastPoints$x, lastPoints$y)
plot(lastPoints[y < 0.15]$x, lastPoints[y < 0.15]$y)
plot(lastPoints$x, lastPoints$y)
exitNumber <- function(y) {
exit <- 0
if (y < 0.15) { exit <- 1 }
else if (y > 0.15 & y < 0.29) { exit <- 2}
else if (y > 0.29 & y < 0.35)  {exit <- 3}
else if (y > 0.35 & y < 0.47)  {exit <- 4}
else if (y >0.47 & y < 0.57) {exit <- 5}
else if (y > 0.57) {exit <- 6}
exit
}
lastPositions[, exit:=sapply(lasty, exitNumber)]
hist(lastPositions$exit, col='red', breaks = 20, main="Exit distribution of ALL flies", xlab='exit #')
hist(tail(lastPositions$exit,15), breaks=20, col="red")
par(new=T)
d <- density(lastPositions$exit)
plot(d)
hist(lastPositions$exit, col='red', breaks = 20, main="Exit distribution of ALL flies", xlab='exit #')
par(new=T)
d <- density(lastPositions$exit)
plot(d)
ggplot(data=lastPositions, aes(lastPositions$exit)) + geom_histogram(aes(y = ..density..)) + geom_density()
# test for normal distribution
shapiro.test(lastPositions$exit)
qqnorm(lastPositions$exit)
files <- "/Users/diana/Dropbox/Phd Stuff/ESA/data_exp/all_db_mf/2015-08-13-Aug-53-1439459582-GGSM-003-DAM-004-FLY-6.db"
library(tools)
library(rgl)
"rgl"#files <- list.files("/home/diana/Desktop/test.db", pattern="*.db",full.names = T)
files <- "/Users/diana/Dropbox/Phd Stuff/ESA/data_exp/all_db_mf/2015-08-13-Aug-53-1439459582-GGSM-003-DAM-004-FLY-6.db"
dt <- loadPsvData(files)
plot(y ~ x, dt,pch=20,col=heat.colors(nrow(dt)))
getColor <- function(x) {
if (diff(x) > 0)
{myColor <-  "red"}
else
{myColor <- "blue"}
myColor
}
plot(t~x,dt,pch=20, col= ifelse(diff(x) > 0, "red", "black"))
unique(dt$experiment_id)
oneFly <- dt[experiment_id=="whole_2016-04-22_09-43-21_025aeeee10184bb39b0754e75cef7900_diana-dam-4-fly-3-etho-25-sd_1280x960@25_00000.db"]
#3D histogram
rgl.open()
rgl.bg(col="#cccccc")
hist3d(oneFly$x, oneFly$y,alpha=0.4,nclass=30,scale=20)
library(tools)
library(rgl)
rgl.open()
rgl.bg(col="#cccccc")
hist3d(oneFly$x, oneFly$y,alpha=0.4,nclass=30,scale=20)
title3d("One fly", xlab="x", zlab="y", ylab="time spent in one case")
library(rgl)
library(tools)
hist3d(oneFly$x, oneFly$y,alpha=0.4,nclass=30,scale=20)
library(rgl)
demo(hist3d)
hist3d(oneFly$x, oneFly$y,alpha=0.4,nclass=30,scale=20)
hist3d(oneFly$x, oneFly$y,alpha=0.4,nclass=30,scale=20)
rgl.open()
rgl.bg(col="#cccccc")
hist3d(oneFly$x, oneFly$y,alpha=0.4,nclass=30,scale=20)
title3d("One fly", xlab="x", zlab="y", ylab="time spent in one case")
#3D histogram
rgl.open()
rgl.bg(col="#cccccc")
hist3d(oneFly$x, oneFly$y,alpha=0.4,nclass=30,scale=20)
title3d("One fly", xlab="x", zlab="y", ylab="time spent in one case")
